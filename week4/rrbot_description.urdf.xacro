<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:macro name="rrbot" params="parent prefix *origin">

  <!-- Constants for robot dimensions -->
  <xacro:property name="mass" value="1" /> <!-- arbitrary value for mass -->
  <xacro:property name="width" value="0.2" /> <!-- Square dimensions (widthxwidth) of beams -->
  <xacro:property name="height1" value="2" /> <!-- Link 1 -->
  <xacro:property name="height2" value="1" /> <!-- Link 2 -->
  <xacro:property name="height3" value="1.1" /> <!-- Link 3 -->
  <xacro:property name="prismatic_width" value="0.035" /> <!-- Thin width for prismatic link -->
  <xacro:property name="camera_link" value="0.05" /> <!-- Size of square 'camera' box -->
  <xacro:property name="axel_offset" value="0.05" /> <!-- Space btw top of beam and the each joint -->
  <xacro:property name="width_offset" value="0.037" /> <!-- Offset of prismatic link passing through the width -->
  <xacro:property name="prismatic_offset" value="${axel_offset*2 + width_offset + width}" /> <!-- This is the descended length in the zero position of the prismatic -->
  <xacro:property name="height4" value="${1 + prismatic_offset}" /> <!-- Link4 -->

  <joint name="${prefix}base_joint" type="fixed">
    <xacro:insert_block name="origin" />
    <parent link="${parent}"/>
    <child link="${prefix}base_link" />
  </joint>

  <!-- Base Link -->
  <link name="${prefix}base_link">
    <collision>
      <origin xyz="0 0 ${height1/2}" rpy="0 0 0"/>
      <geometry>
        <box size="${width} ${width} ${height1}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 ${height1/2}" rpy="0 0 0"/>
      <geometry>
        <box size="${width} ${width} ${height1}"/>
      </geometry>
    </visual>

    <inertial>
      <origin xyz="0 0 ${height1/2}" rpy="0 0 0"/>
      <mass value="${mass}"/>
      <inertia
        ixx="${mass / 12.0 * (width*width + height1*height1)}" ixy="0.0" ixz="0.0"
        iyy="${mass / 12.0 * (height1*height1 + width*width)}" iyz="0.0"
        izz="${mass / 12.0 * (width*width + width*width)}"/>
      </inertial>
    </link>

    <joint name="${prefix}joint1" type="revolute">
      <parent link="${prefix}base_link"/>
      <child link="${prefix}link1"/>
      <!-- Set limits of revolute joint to 0deg to +180deg, 1000 N effort limit, velocity of 180 rad/s  -->
      <limit lower="0" upper="3.14159" effort="1000" velocity="6"/>
      <origin xyz="0 0 ${height1 + axel_offset*2}" rpy="0 1.5708 0"/>
      <axis xyz="-1 0 0"/>
      <dynamics damping="0.7"/>
    </joint>

    <!-- Middle Link -->
    <link name="${prefix}link1">
      <collision>
        <origin xyz="0 0 ${height2/2 - axel_offset}" rpy="0 0 0"/>
        <geometry>
          <box size="${width} ${width} ${height2}"/>
        </geometry>
      </collision>

      <visual>
        <origin xyz="0 0 ${height2/2 - axel_offset}" rpy="0 0 0"/>
        <geometry>
          <box size="${width} ${width} ${height2}"/>
        </geometry>
      </visual>

      <inertial>
        <origin xyz="0 0 ${height2/2 - axel_offset}" rpy="0 0 0"/>
        <mass value="${mass}"/>
        <inertia
          ixx="${mass / 12.0 * (width*width + height2*height2)}" ixy="0.0" ixz="0.0"
          iyy="${mass / 12.0 * (height2*height2 + width*width)}" iyz="0.0"
          izz="${mass / 12.0 * (width*width + width*width)}"/>
        </inertial>
      </link>

      <joint name="${prefix}joint2" type="revolute">
        <parent link="${prefix}link1"/>
        <child link="${prefix}link2"/>
        <!-- Set limits of revolute joint to -150deg to +150deg, 1000 N effort limit, velocity of 180 rad/s  -->
        <limit lower="-2.61799" upper="2.61799" effort="1000" velocity="6"/>
        <origin xyz="${width * -1} 0 ${height2 - axel_offset*2}" rpy="0 0 0"/>
        <axis xyz="-1 0 0"/>
        <dynamics damping="0.7"/>
      </joint>

      <!-- Top Link -->
      <link name="${prefix}link2">
        <collision>
          <origin xyz="0 0 ${height3/2 - axel_offset}" rpy="0 0 0"/>
          <geometry>
            <box size="${width} ${width} ${height3}"/>
          </geometry>
        </collision>

        <visual>
          <origin xyz="0 0 ${height3/2 - axel_offset}" rpy="0 0 0"/>
          <geometry>
            <box size="${width} ${width} ${height3}"/>
          </geometry>
        </visual>

        <inertial>
          <origin xyz="0 0 ${height3/2 - axel_offset}" rpy="0 0 0"/>
          <mass value="${mass}"/>
          <inertia
            ixx="${mass / 12.0 * (width*width + height3*height3)}" ixy="0.0" ixz="0.0"
            iyy="${mass / 12.0 * (height3*height3 + width*width)}" iyz="0.0"
            izz="${mass / 12.0 * (width*width + width*width)}"/>
          </inertial>
      </link>

      <!-- Tool Joint -->
      <joint name="${prefix}tool_joint" type="prismatic">
        <parent link="${prefix}link2"/>
        <child link="${prefix}tool_link" />
        <!-- Set limits of prismatic joint -->
        <limit lower="${prismatic_offset * -1}" upper="1.1" effort="1000" velocity="1"/>
        <origin xyz="${prismatic_offset - height4} 0 ${height3 - axel_offset*2}" rpy="0 1.5708 0" />
        <axis xyz="0 0 1"/>
        <dynamics damping="0.7"/>
      </joint>

      <!-- Tool Link -->
      <link name="${prefix}tool_link">
        <collision>
          <origin xyz="0 0 ${height4/2 - axel_offset}" rpy="0 0 0"/>
          <geometry>
            <box size="${prismatic_width} ${prismatic_width} ${height4}"/>
          </geometry>
        </collision>

        <visual>
          <origin xyz="0 0 ${height4/2 - axel_offset}" rpy="0 0 0"/>
          <geometry>
            <box size="${prismatic_width} ${prismatic_width} ${height4}"/>
          </geometry>
        </visual>

        <inertial>
          <origin xyz="0 0 ${height4/2 - axel_offset}" rpy="0 0 0"/>
          <mass value="${mass}"/>
          <inertia
            ixx="${mass / 12.0 * (prismatic_width*prismatic_width + height4*height4)}" ixy="0.0" ixz="0.0"
            iyy="${mass / 12.0 * (height4*height4 + prismatic_width*prismatic_width)}" iyz="0.0"
            izz="${mass / 12.0 * (prismatic_width*prismatic_width + prismatic_width*prismatic_width)}"/>
          </inertial>
      </link>

  </xacro:macro>

</robot>
